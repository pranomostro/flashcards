2019-06-27	0	1	2.5	Definition Alphabet Σ	Endliche Menge
2019-06-27	0	1	2.5	Definition Wort über Σ	Endliche Folge von Zeichen aus Σ
2019-06-27	0	1	2.5	Bedeutung ε	Leeres Wort
2019-06-27	0	1	2.5	Bedeutung w^{n+1}	wwⁿ
2019-06-27	0	1	2.5	Bedeutung Σ*	Menge aller Wörter über Σ (unendlich)
2019-06-27	0	1	2.5	Definition formale Sprache L	L⊆Σ*, L(G) als die Sprache, die aus einer Grammatik erzeugt werden kann
2019-06-27	0	1	2.5	Operationen auf Sprachen A,B⊆Σ*	Konkatenation: AB={uv|u∈A ∧ v∈B} / Aⁿ={w₁,…,wₙ|w₁,…,wₙ∈A} / A*={w₁,…,wₙ|n≥0∧w₁,…,wₙ∈A}=⋃Aⁿ / A+=AA*
2019-06-27	0	1	2.5	Definition Grammatik	4-Tupel G=(v,Σ,P,S) / V endliche Menge von Nichtterminalzeichen / Σ endliche Menge von Terminalzeichen / P⊆(V∪Σ)*×(V∪Σ)* Produktion / S Startsymbol
2019-06-27	0	1	2.5	Chomsky-Hierarchie Klassen	Typ 0: immer. / Typ 1: falls für jede Produktion α→β außer S→ε gilt |α|≤|β| / Typ 2: falls G vom Typ 1 ist und für jede Produktion α→β gilt α∈V / Typ 3: falls G vom Typ 2 ist und für jede Produktion α→β außer S→ε gilt β∈Σ∪ΣV
2019-06-27	0	1	2.5	Sprachklassen Namen	Typ 3: Rechtslineare Grammatik, Reguläre Sprachen / Typ 2: Kontextfreie Grammatik, Kontextfreie Sprachen / Typ 1: Kontextsensitive Grammatik, Kontextsens. Sprachen / Typ 0: Phasenstrukturgrammatik, Rekursiv aufzählbare Sprachen
2019-06-27	0	1	2.5	Satz der Sprachhierarchie	L(Typ 3)⊂L(Typ 2)⊂L(Typ 1)⊂L(Typ 0)
2019-06-27	0	1	2.5	Wortproblem Stellung	Gegeben: eine Grammatik G, ein Wort w∈Σ* / Frage: Gilt w∈L(G)?
2019-06-27	0	1	2.5	Definition deterministischer endlicher Automat	M=(Q,Σ,δ,q₀,F) / endliche Menge an Zuständen Q / endliches Eingabealphabet Σ / totale Übergangsfunktion δ:Q×Σ→Q / Startzustand q₀∈Q / Menge F⊆Q von Endzuständen
2019-06-27	0	1	2.5	Definition Recognizer	Programm, welches das Wortproblem für eine gegebene Grammatik löst
2019-06-27	0	1	2.5	Definition Ableitungsrelation →_{G}	α →_{G} α₁ existiert gdw ∃ β →_{G} β'∈P ∧ ∃ α₁,α₂: α=α₁βα₂ und α'=α₁β'α₂
2019-06-27	0	1	2.5	Definition reflexive transitive Hülle	α →^{*}_{G}β :⇔ ∃n. α →ⁿ_{G} β
2019-06-27	0	1	2.5	Äquivalenz regulärer Sprachen	Rechtslineare Grammatiken ⇔ Endliche Automaten ⇔ Reguläre Ausdrücke
2019-06-27	0	1	2.5	Definition nichtdeterministischer endlicher Automat	N=(Q,Σ,δ,q₀,F) / Q,Σ,q₀ und F sind wie bei DFA / δ: Q×Σ → P(Q), P(Q)=Menge aller Teilmengen von Q=2^{Q} (alternative: δ⊆Q×Σ×Q)
2019-06-27	0	1	2.5	Äquivalenz von Automaten	DFA≅NFA≅ε-NFA
2019-06-27	0	1	2.5	Arten von Produktionen in rechtslinearen Grammatiken	A → a, A → aB, S → ε
2019-06-27	0	1	2.5	Pumping Lemma	Sei R⊆Σ* regulär, dann ∃n>0: ∀z∈ℝ mit |z|≥n und z=uvw: / • v≠ε / • |uv|≤n / • ∀i≥0: uvⁱw∈ℝ
2019-06-27	0	1	2.5	Ein (Entscheidungs)Problem ist entscheidbar, wenn _	es einen Algorithmus gibt, der bei jeder Eingabe in endlicher Zeit die richtige Antwort gibt
2019-06-27	0	1	2.5	Definition Entscheidungsproblem für reguläre Sprachen	Gegeben ein oder mehrere Objekte, die eine reguläre Sprache beschreiben, haben diese Objekte eine Eigenschaft X?
2019-06-27	0	1	2.5	Ardens Lemma für Sprachen A, B und X	Ist ε¬∈A, so gilt / X=AX ∪ B ⇒ X=A*B
2019-06-27	0	1	2.5	Algorithmus zur Minimierung eines DFA	1. Entfernung aller von q₀ aus nicht erreichbaren Zustände / 2. Berechnung äquivalenter Zustände des Automaten / 3. Kollabieren des Automaten durch Zusammenfassung äquivalenter Zustände
2019-06-27	0	1	2.5	Satz von Myhill-Nerode: Eine Sprache L⊆Σ* ist genau dann regulär, wenn _	≡_{L} endlich viele Äquivalenzklassen hat.
2019-06-27	0	1	2.5	Definition kontextfreie Grammatik	G=(V,Σ,P,S) / V: endliche Menge an Nichtterminalzeichen / Σ: Terminalzeichen / P⊆V×(V∪Σ)*: Produktionen / S∈V: Startsymbol
